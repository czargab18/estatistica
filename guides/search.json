[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Estatística",
    "section": "",
    "text": "Estatística\nEste projeto é muitas coisas e nada ao mesmo tempo. Algumas coisas são apenas para desenvolver habilidades, como o design do projeto é para a criatividade ou os books para a escrita. Outras para criar problemas e suas devidas soluções, mesmo que tenha que ter n soluções para cada problema. Buscarei nos tempos livres da graduação dedicar-me ao projeto.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estatística</span>"
    ]
  },
  {
    "objectID": "index.html#qual-o-ponto-de-ignição",
    "href": "index.html#qual-o-ponto-de-ignição",
    "title": "Estatística",
    "section": "Qual o ponto de ignição?",
    "text": "Qual o ponto de ignição?\nPrimeiro, um ponto de ignição é um ponto que sucede o caminho. O começo de tudo. Inicialmente, encantei-me pelo design e programação web. Tentei desenvolver essas habilidades ao redesenhar e construir o site do Departamento de Estatística da Universidade de Brasília.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estatística</span>"
    ]
  },
  {
    "objectID": "index.html#caminho",
    "href": "index.html#caminho",
    "title": "Estatística",
    "section": "Caminho",
    "text": "Caminho\nMuitas coisas foram incorporadas a este repositório. books é o meu desejo de construir livros sobre estatistica com base em minhas notas de aulas e exercícios resolvidos, da maneira que eu desejar. Sujeito a escrever e reescrever quantas vezes eu desejar até ficar do meu agrado.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estatística</span>"
    ]
  },
  {
    "objectID": "index.html#bom-para-quem-é-este-projeto",
    "href": "index.html#bom-para-quem-é-este-projeto",
    "title": "Estatística",
    "section": "Bom, para quem é este projeto?",
    "text": "Bom, para quem é este projeto?\nEu o desenvolverei principalmentee exclusivamente para mim. Assim como no vídeo intitulado “O Diário de Henry Jones”, veja (AKITA, 2025), buscarei o mesmo mas para a área de Estatística. A ideia de possuir algo que contenha tudo o que estudei ou estudarei me parece essencial para meu progresso na área, além de um bom ponto de partida para referências bibliográficas.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estatística</span>"
    ]
  },
  {
    "objectID": "VENV.html",
    "href": "VENV.html",
    "title": "Instalar o .venv",
    "section": "",
    "text": "Ativar o .venv (Ambiente Virtual Python)",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Instalar o .venv</span>"
    ]
  },
  {
    "objectID": "VENV.html#ativar-o-.venv-ambiente-virtual-python",
    "href": "VENV.html#ativar-o-.venv-ambiente-virtual-python",
    "title": "Instalar o .venv",
    "section": "",
    "text": ".venv/Scripts/activate",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Instalar o .venv</span>"
    ]
  },
  {
    "objectID": "VENV.html#atualize-o-pip",
    "href": "VENV.html#atualize-o-pip",
    "title": "Instalar o .venv",
    "section": "Atualize o pip",
    "text": "Atualize o pip\npython.exe -m pip install --upgrade pip",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Instalar o .venv</span>"
    ]
  },
  {
    "objectID": "VENV.html#salve-as-dependências",
    "href": "VENV.html#salve-as-dependências",
    "title": "Instalar o .venv",
    "section": "Salve as dependências",
    "text": "Salve as dependências\npip freeze &gt;  ./_backend_/repositorio/requirements.txt",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Instalar o .venv</span>"
    ]
  },
  {
    "objectID": "JOIN_REPO.html",
    "href": "JOIN_REPO.html",
    "title": "Juntar 2 repositórios",
    "section": "",
    "text": "Passos Detalhados\nEste guia descreve como mesclar o conteúdo do repositório api na pasta backend do repositório estatistica, preservando o histórico de commits e atualizando apenas os arquivos modificados.",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Juntar 2 repositórios</span>"
    ]
  },
  {
    "objectID": "JOIN_REPO.html#passos-detalhados",
    "href": "JOIN_REPO.html#passos-detalhados",
    "title": "Juntar 2 repositórios",
    "section": "",
    "text": "1. Clone o repositório estatistica\ngit clone https://github.com/cesargabrielphd/estatistica.git\ncd estatistica\nExplicação: - git clone https://github.com/cesargabrielphd/estatistica.git: Este comando cria uma cópia local do repositório estatistica. - cd estatistica: Navega para a pasta clonada.\n\n\n2. Adicione o repositório api como um remoto separado e faça o fetch\ngit remote add repo2 https://github.com/cesargabrielphd/api.git\ngit fetch repo2\nExplicação: - git remote add repo2 https://github.com/cesargabrielphd/api.git: Adiciona o repositório api como um remoto adicional chamado repo2. - git fetch repo2: Baixa o histórico de commits e o conteúdo do repositório repo2, mas não os aplica ao repositório atual.\n\n\n3. Crie uma nova branch para o merge\ngit checkout -b joinrepo\nExplicação: - git checkout -b joinrepo: Cria e troca para uma nova branch chamada joinrepo para isolar as mudanças.\n\n\n4. Faça o merge dos arquivos modificados do repo2 na pasta backend utilizando git read-tree\ngit read-tree --prefix=backend/ -u repo2/main\nExplicação: - git read-tree --prefix=backend/ -u repo2/main: Este comando mescla o conteúdo do repo2 na pasta backend do repo1, preservando o histórico de commits e atualizando apenas os arquivos modificados.\n\n\n5. Faça commit das mudanças com o padrão especificado\ngit commit -m \"repo(merge): atualizando pasta:repo2 com o repo:repo2\"\nExplicação: - git commit -m \"repo(merge): atualizando pasta:repo2 com o repo:repo2\": Faz commit das mudanças na branch joinrepo, preservando o histórico de commits e utilizando o padrão de mensagem especificado.\n\n\n6. Volte para a branch principal e faça o merge\ngit checkout main\ngit merge joinrepo\nExplicação: - git checkout main: Troca para a branch principal (main) do repositório estatistica. - git merge joinrepo: Aplica as mudanças da branch joinrepo na branch principal, integrando o conteúdo do repo2.\n\n\n6.1. Priorize as mudanças da branch joinrepo em caso de conflitos\ngit merge -X theirs joinrepo\nExplicação: - Inicie o merge com a branch joinrepo priorizando as mudanças dela. - Use a estratégia de merge theirs para resolver automaticamente os conflitos, garantindo que as alterações da branch joinrepo prevaleçam.\n\n\n7. Empurre as mudanças para o repositório remoto\ngit push origin main\nExplicação: - git push origin main: Envia as mudanças da branch principal para o repositório remoto estatistica.\n\n\n8. Remova a branch temporária e o remoto adicional\ngit branch -d joinrepo\ngit remote remove repo2\nExplicação: - git branch -d joinrepo: Remove a branch temporária joinrepo após o merge. - git remote remove repo2: Remove o remoto repo2, que não é mais necessário, para evitar confusão futura.",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Juntar 2 repositórios</span>"
    ]
  },
  {
    "objectID": "JOIN_REPO.html#resumo-dos-comandos",
    "href": "JOIN_REPO.html#resumo-dos-comandos",
    "title": "Juntar 2 repositórios",
    "section": "Resumo dos Comandos",
    "text": "Resumo dos Comandos\n# Clone o repositório estatistica\ngit clone https://github.com/cesargabrielphd/estatistica.git\ncd estatistica\n\n# Adicione o repositório api e faça fetch\ngit remote add repo2 https://github.com/cesargabrielphd/api.git\ngit fetch repo2\n\n# Crie uma nova branch para o merge\ngit checkout -b joinrepo\n\n# Faça o merge dos arquivos modificados do repo2 na pasta backend utilizando git read-tree\ngit read-tree --prefix=backend/ -u repo2/main\n\n# Faça commit das mudanças com o padrão especificado\ngit commit -m \"repo(merge): atualizando pasta:repo2 com o repo:repo2\"\n\n# Volte para a branch principal e faça o merge\ngit checkout main\ngit merge joinrepo\n\n# Priorize as mudanças da branch joinrepo em caso de conflitos\ngit merge -X theirs joinrepo\n\n# Empurre as mudanças para o repositório remoto\ngit push origin main\n\n# Remova a branch temporária e o remoto adicional\ngit branch -d joinrepo\ngit remote remove repo2\n\nNotas Adicionais\n\nCertifique-se de que a branch main do repositório repo2 contém o conteúdo desejado antes de iniciar o processo.\nCaso o repositório repo2 use uma branch principal com outro nome (por exemplo, master), substitua repo2/main pelo nome correto da branch.\nA opção --reset no comando git read-tree garante que os arquivos do repositório repo2 sobrescrevam os arquivos existentes no repositório repo1.",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Juntar 2 repositórios</span>"
    ]
  },
  {
    "objectID": "NEWSROOM.html",
    "href": "NEWSROOM.html",
    "title": "Documentação da pasta newsroom",
    "section": "",
    "text": "Estrutura de arquivos\nEsta pasta destinace a automatização relacionadas a publicação de artigos para a pasta na raiz do projeto estatistica/newsroom.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Documentação da pasta newsroom</span>"
    ]
  },
  {
    "objectID": "NEWSROOM.html#estrutura-de-arquivos",
    "href": "NEWSROOM.html#estrutura-de-arquivos",
    "title": "Documentação da pasta newsroom",
    "section": "",
    "text": "./config/NEWSROOM/\n├── scripts\n│   ├── /newsroom/\n│   │   ├── /posts/\n│   │   │   ├── /python/\n│   │   │   │   ├── funcoes.py\n│   │   │   |   └── script_automacao.py\n│   │   │   ├── /article/\n│   │   │   │   ├── /src/\n│   │   │   │   │   ├── image.png\n│   │   │   │   │   ├── formulas.tex\n│   │   │   │   ├── article.txt\n├── data\n│   ├── avisos.json\n│   ├── disciplinas.json\n│   ├── eventos.json\n│   └── articles.json\n└── NEWSROOM.md",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Documentação da pasta newsroom</span>"
    ]
  },
  {
    "objectID": "NEWSROOM.html#estrutua-do-artigo.txt",
    "href": "NEWSROOM.html#estrutua-do-artigo.txt",
    "title": "Documentação da pasta newsroom",
    "section": "Estrutua do artigo.txt",
    "text": "Estrutua do artigo.txt\ndate-title-article: Título do Artigo\ndate-subtitle-article: Subtítulo do Artigo\ndate-author-article: Autor do Artigo\ndate-article: 05-03-2025\ndate-description-article: Descrição do Artigo\ndate-keywords-article: Palavras-chave do Artigo\ndate-category-article: Categoria do Artigo\ndate-disciplina-article: Disciplina do Artigo\ndate-codigo-disciplina-article: Curso do Artigo\n\ncontent-article: \n\n--- inicio_resumo ---\np: paragrafo 1 do resumo\np: paragrafo 2 do resumo\nimg: link\n--- fim_resumo ---\n\n--- inicio_introducao ---\np: paragrafo 1 da introdução\np: paragrafo 2 da introdução\np: paragrafo 3 da introdução\nimg: link\np: paragrafo 4 da introdução\n--- fim_introducao ---\n\n--- inicio_desenvolvimento ---\np: paragrafo 1 do desenvolvimento\na: link\nparagrafo 2 do desenvolvimento\nparagrafo 3 do desenvolvimento\n--- fim_desenvolvimento ---\n\n--- inicio_conclusao ---\np: paragrafo 1 da conclusão\nimg: link\np: paragrafo 2 da conclusão\n--- fim_conclusao ---\n\n--- inicio_referencias ---\np: referencia 1\na: link\np+a: referencia 2\np: referencia 3 \n--- fim_referencias ---\n\n--- inicio_anexo ---\ndwn: link-download-anexo 1\ndwn: link-download-anexo 2\n--- fim_anexo ---",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Documentação da pasta newsroom</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html",
    "href": "PRETTIER.html",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "",
    "text": "5.1 Passo 1: Instalar Node.js e npm",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html#passo-1-instalar-node.js-e-npm",
    "href": "PRETTIER.html#passo-1-instalar-node.js-e-npm",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "",
    "text": "Baixe e instale o Node.js a partir do site oficial: https://nodejs.org/\nDurante a instalação, certifique-se de que a opção para instalar o npm (Node Package Manager) está selecionada.\nApós a instalação, abra um novo terminal e verifique se o Node.js e o npm foram instalados corretamente executando os seguintes comandos:\nnode -v\nnpm -v",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html#passo-2-instalar-o-prettier",
    "href": "PRETTIER.html#passo-2-instalar-o-prettier",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "5.2 Passo 2: Instalar o Prettier",
    "text": "5.2 Passo 2: Instalar o Prettier\n\nNo terminal, instale o Prettier globalmente executando o comando:\nnpm install -g prettier",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html#passo-3-configurar-o-prettier-no-vs-code",
    "href": "PRETTIER.html#passo-3-configurar-o-prettier-no-vs-code",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "5.3 Passo 3: Configurar o Prettier no VS Code",
    "text": "5.3 Passo 3: Configurar o Prettier no VS Code\n\nAbra o VS Code.\nVá para a aba de extensões (ícone de quadrado no lado esquerdo ou Ctrl+Shift+X).\nProcure por “Prettier - Code formatter” e instale a extensão.\nAbra as configurações do VS Code (Ctrl+,).\nProcure por “Format On Save” e marque a opção “Editor: Format On Save”.\nCertifique-se de que o Prettier é o formatador padrão. Procure por “Default Formatter” e selecione “Prettier - Code formatter”.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html#passo-4-configuração-adicional-no-settings.json-opcional",
    "href": "PRETTIER.html#passo-4-configuração-adicional-no-settings.json-opcional",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "5.4 Passo 4: Configuração adicional no settings.json (opcional)",
    "text": "5.4 Passo 4: Configuração adicional no settings.json (opcional)\n\nAbra o arquivo de configurações JSON (Ctrl+Shift+P e digite “Preferences: Open Settings (JSON)”).\nAdicione as seguintes configurações para garantir que o Prettier seja usado para formatação:\n{\n  \"editor.formatOnSave\": true,\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\n  \"[html]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[javascript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[json]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  }\n}",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html#passo-5-executar-o-prettier-manualmente",
    "href": "PRETTIER.html#passo-5-executar-o-prettier-manualmente",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "5.5 Passo 5: Executar o Prettier manualmente",
    "text": "5.5 Passo 5: Executar o Prettier manualmente\n\nAbra o terminal integrado no VS Code (Ctrl+ ouView &gt; Terminal).\nNavegue até o diretório do seu projeto.\nExecute o comando Prettier para formatar os arquivos desejados. Por exemplo, para formatar todos os arquivos HTML no diretório:\nprettier --write \"**/*.html\"\n\nSeguindo esses passos, você configurará o Prettier para formatar automaticamente seus arquivos ao salvar e também poderá executá-lo manualmente quando necessário.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html#rodar-os-códigos",
    "href": "PRETTIER.html#rodar-os-códigos",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "5.6 rodar os códigos",
    "text": "5.6 rodar os códigos\n  npm install -g prettier\nFormatar todos os arquivos HTML no repositório usando Prettier\n  prettier --write \"**/*.html\"\n  prettier --write \\\"**/*.{js,jsx,ts,tsx,json,css,scss,md}\\\"\"",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PRETTIER.html#referência",
    "href": "PRETTIER.html#referência",
    "title": "5  Tutorial para Configurar e Usar o Prettier no VS Code",
    "section": "5.7 Referência:",
    "text": "5.7 Referência:\n\nwww.github.com/copilot/",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Tutorial para Configurar e Usar o Prettier no VS Code</span>"
    ]
  },
  {
    "objectID": "PATTERNS.html",
    "href": "PATTERNS.html",
    "title": "Define os padrões usados no Repositório",
    "section": "",
    "text": "Padrões de commits usados neste Repositório\nO commit semântico possui os elementos estruturais abaixo (tipos), que informam a intenção do seu commit ao utilizador(a) de seu código.\nIsso indica algo",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Define os padrões usados no Repositório</span>"
    ]
  },
  {
    "objectID": "PATTERNS.html#padrões-de-commits-usados-neste-repositório",
    "href": "PATTERNS.html#padrões-de-commits-usados-neste-repositório",
    "title": "Define os padrões usados no Repositório",
    "section": "",
    "text": "git commit -m 'padrao(acao): mensagem' -m 'descrição detalhada.'\n\ndocs Commits do tipo docs indicam que houveram mudanças na documentação, como por exemplo no Readme do seu repositório. (Não inclui alterações em código).\n\nExemplo: docs: atualiza documentação da API\nExemplo: docs: adiciona guia de contribuição\nExemplo: docs: corrige erros de digitação no README\nExemplo: docs: adiciona exemplos de uso na documentação\n\nfix Commits do tipo fix indicam que seu trecho de código commitado está solucionando um problema (bug fix), (se relaciona com o PATCH do versionamento semântico).\n\nExemplo: fix: corrige erro de validação no formulário de cadastro\nExemplo: fix: corrige problema de carregamento lento na página inicial\nExemplo: fix: resolve problema de compatibilidade com o navegador X\nExemplo: fix: corrige erro de cálculo no relatório financeiro\n\nstyle Commits do tipo style indicam que houveram alterações referentes a formatações de código, semicolons, trailing spaces, lint… (Não inclui alterações em código).\n\nExemplo: style: corrige formatação do código\nExemplo: style: aplica linting ao código\nExemplo: style: ajusta indentação em arquivos CSS\nExemplo: style: remove espaços em branco desnecessários\n\nrefactor Commits do tipo refactor referem-se a mudanças devido a refatorações que não alterem sua funcionalidade, como por exemplo, uma alteração no formato como é processada determinada parte da tela, mas que manteve a mesma funcionalidade, ou melhorias de performance devido a um code review.\n\nExemplo: refactor: refatora função de cálculo de impostos\nExemplo: refactor: melhora estrutura do código do componente de login\nExemplo: refactor: simplifica lógica de autenticação\nExemplo: refactor: separa funções utilitárias em módulos\n\nci Commits do tipo ci indicam mudanças relacionadas a integração contínua (continuous integration).\n\nExemplo: ci: configura pipeline de integração contínua\nExemplo: ci: adiciona testes automatizados ao pipeline\nExemplo: ci: corrige configuração do Jenkins\nExemplo: ci: adiciona verificação de qualidade de código\n\ncleanup Commits do tipo cleanup são utilizados para remover código comentado, trechos desnecessários ou qualquer outra forma de limpeza do código-fonte, visando aprimorar sua legibilidade e manutenibilidade.\n\nExemplo: cleanup: remove código comentado\nExemplo: cleanup: remove funções obsoletas\nExemplo: cleanup: apaga arquivos de log\nExemplo: cleanup: remove variáveis não utilizadas\n\nfolders: Usado para modificações de diretórios (exclusão, criação, mudança, renomeação).\n\nExemplo: folders: cria estrutura de pastas para componentes\nExemplo: folders: reorganiza diretórios do projeto\nExemplo: folders: adiciona arquivos (imagens, fontes,...)\nExemplo: folders: apaga arquivos  (imagens, fontes,...)\nExemplo: folders: move arquivos para novo diretório\nExemplo: folders: adiciona novas fontes ao projeto\n\nfiles: Usado para modificações de arquivos (exclusão, criação, mudança, renomeação).\n\nExemplo: files: cria estrutura de pastas para componentes\nExemplo: files: reorganiza diretórios do projeto\nExemplo: files: adiciona arquivos (imagens, fontes,...)\nExemplo: files: apaga arquivos  (imagens, fontes,...)\nExemplo: files: move arquivos para novo diretório\nExemplo: files: adiciona novas fontes ao projeto\n\nfeature Commits do tipo feature indicam a adição de uma nova funcionalidade ao código.\n\nExemplo: feature: adiciona funcionalidade de exportação de dados\nExemplo: feature: adiciona suporte a notificações push\nExemplo: feature: implementa sistema de comentários\nExemplo: feature: adiciona integração com API externa\n\npacotes: referente a pacotes de funções",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Define os padrões usados no Repositório</span>"
    ]
  },
  {
    "objectID": "PATTERNS.html#padrões-de-ssh-do-repositório",
    "href": "PATTERNS.html#padrões-de-ssh-do-repositório",
    "title": "Define os padrões usados no Repositório",
    "section": "Padrões de SSH do repositório",
    "text": "Padrões de SSH do repositório\n\nnotebook ==&gt; Hospedagem\nnotebook ==&gt; GitHub\nAutenticação (feito no painel da hostinger):\n\nGitHub |==&gt; Hospedagem (Solicitação)\nGitHub &lt;==| Hospedagem (Permição)\n\n\nObservação: A chave Auth privada criada e salva como “estatistica-auth-github_hostinge” deve ser colocada no repositório do GitHub e a Auth publica no painel da Hostinger\n\nNomenclatura\npadrão de chave: dominio-equipamento-local-serverof@serverto - dominio: domínio do site que se refere. - equipamento: tipo de equipamento (PC, Notebook, etc.). - local: Localização (Casa, Trabalho, Faculdade, etc.). - serverof: Servidor que solicita (Local-casa, Github, etc.). - serverto: Servidor que autoriza (hospedagem). Observação: Se a interação for entre Hospedagem e GitHub, então os parametros equipamento-local para auth\n\nExemplos\nC:\\~\\.ssh&gt; ssh-keygen -t rsa -b 4096 -C \"estatistica-nb-home-local@hostinger\"\nObservação: renomear a chave para estatistica-nb-home-local_hostinger\nC:\\~\\.ssh&gt; ssh-keygen -t rsa -b 4096 -C \"estatistica-auth-github@hostinger\"\nObservação: renomear a chave para estatistica-nb-home-github_hostinger\n\n\n\nTipo de chave\n\nNotebook para a Hospedagem Hostinger\nssh-keygen -t rsa -b 4096 -C \"nb-home-local-estatistica@hostinger\"\nNotebook para o GitHub\nssh-keygen -t rsa -b 4096 -C \"estatistica-nb-home-local@github\"\nAuth entre Github e Hospedagem Hostinger\nssh-keygen -m PEM -t rsa -b 4096 -C \"nb-home-estatistica-local@hostinger\"",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Define os padrões usados no Repositório</span>"
    ]
  },
  {
    "objectID": "PATTERNS.html#referência",
    "href": "PATTERNS.html#referência",
    "title": "Define os padrões usados no Repositório",
    "section": "Referência",
    "text": "Referência\n\nYouTube Código Fonte TV",
    "crumbs": [
      "Guides",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Define os padrões usados no Repositório</span>"
    ]
  },
  {
    "objectID": "index.html#por-que-a-demora",
    "href": "index.html#por-que-a-demora",
    "title": "Estatística",
    "section": "Por que a demora??",
    "text": "Por que a demora??\nA principal razão é falta de dedicação exclusiva ao projeto. O projeto é algo que não me trará retorno financeiro, mas sim um retorno intelectual. O que me faz dedicar-me a ele em momentos livres, como férias ou finais de semana. Além disso, o projeto é algo que não tem um fim.\nA segunda razão é a constante reestruturação do projeto ou de partes dele. O que pode levar tempo, mas é necessário para o bom funcionamento. Além disso, a reestruturação é algo que pode ser feito em paralelo com o desenvolvimento.\nComo não há um fim, não haverá pressa para concluir o projeto.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estatística</span>"
    ]
  },
  {
    "objectID": "index.html#documentações",
    "href": "index.html#documentações",
    "title": "Estatística",
    "section": "Documentações",
    "text": "Documentações\nComo dito anteriormente, elas estão mudando com o projeto mas bem mais divagar.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estatística</span>"
    ]
  }
]