name: Submodules e outras ações
# description: Atualiza submodules e outras ações relacionadas

on:
  workflow_dispatch:
  repository_dispatch:
    types: [submodule-books]

jobs:
  books:
    if: ${{ github.event.action == 'submodule-books' }}
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    env:
      USEREMAIL: ${{ secrets.USEREMAIL }}
      USERNAME: ${{ github.repository_owner }}
      TOKEN: ${{ secrets.TOKEN_REPO_SYNC }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout estatistica
        id: checkout_estatistica
        uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}
          ref: main
          path: "estatistica"
          submodules: "true"

      - name: Configura usuário do git
        id: configura_usuario_git
        run: |
          git config --global user.name "${{ env.USERNAME }}"
          git config --global user.email "${{ env.USEREMAIL }}"

      - name: Atualiza submodule books
        id: atualiza_submodulo_books
        run: |
          git submodule update --remote books
          git add books

      - name: Verificar submodulo 'books'
        id: verifica_submodulo_books
        working-directory: estatistica/books
        run: |
          if [ cd books ]; then
            echo "Submodule 'books' updated successfully."
            git fetch
          else
            echo "Submodule 'books' update failed."
            exit 1
          fi

      - name: Detectar e salvar nomes dos livros alterados
        id: detectar_livros_alterados
        working-directory: estatistica/books
        run: |
          PADRAO='^build/[A-Z]{3}[0-9]{4}/'
          PASTAS=$(git diff --name-only HEAD @{u} \
            | grep -E "$PADRAO" \
            | sed -E 's|^(build/[A-Z]{3}[0-9]{4}).*|\1|' \
            | sort -u | tr '\n' ' ')
          echo "PASTAS_LIVROS_ALTERADOS=$PASTAS" >> $GITHUB_OUTPUT

      - name: Configura Quarto
        id: configura_quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Versão do Quarto
        id: versao_quarto
        run: quarto --version 

      - name: Renderiza livros Modificados
        working-directory: estatistica/books
        id: renderiza_livros_modificados
        if: ${{ steps.detectar_livros_alterados.outputs.PASTAS_LIVROS_ALTERADOS != '' }}
        run: |
          PASTAS=$(echo "${{ steps.detectar_livros_alterados.outputs.PASTAS_LIVROS_ALTERADOS }}" | tr ' ' '\n')
          for PASTA in $PASTAS; do
            echo "Renderizando livros na pasta: $PASTA"
            quarto render build/$PASTA --to html --execute --output-dir "../../books/${folder}"
          done

      - name: Limpa diretórios de 'libs'
        id: limpa_libs
        working-directory: estatistica/books
        if: ${{ steps.detectar_livros_alterados.outputs.PASTAS_LIVROS_ALTERADOS != '' }}
        run: |
          LIBS="libs site_libs _libs _site delete _books index_files"
          for PASTA in $(echo "${{ steps.detectar_livros_alterados.outputs.PASTAS_LIVROS_ALTERADOS }}"); do
            for DIR in $LIBS; do
              find "$PASTA" -type d -name "$DIR" -exec rm -rf {} +
            done
          done

      - name: Configura Python
        id: configura_python
        # Configura Python

      - name: Instalar dependencias do Python
        id: instala_dependencias_python
        # Instalar dependencias do Python

      - name: Corrigir links para GitHub Pages - Books
        id: corrige_links_github_pages_books
        # Corrigir links para GitHub Pages - Books

      - name: Sincronizar pasta 'artefatos_books' com 'estatistica/book'
        id: sincroniza_artefatos_books
        # Sincronizar pasta 'artefatos_books' com 'estatistica/book'

      # - name: Commitar alterações de 'estatistica/books'
      #   id: commita_alteracoes_books
      #   working-directory: estatistica
      #   run: |
      #     git add .
      #     git commit -m "Atualiza submodulos e aplica ações do workflow" || echo "Nada a commitar"
      #     git push origin main

      - name: Garante que a branch book existe e faz checkout
        id: garante_branch_book
        # Garante que a branch book existe e faz checkout

      - name: Configura credenciais do Git
        id: configura_credenciais_git
        # Configura credenciais do Git

      - name: Instala GitHub CLI
        id: instala_github_cli
        # Instala GitHub CLI

      - name: Cria branch temporária para PR
        id: cria_branch_temporaria_pr
        # Cria branch temporária para PR

      - name: Faz commit e push dos livros renderizados na branch temporária
        id: commit_push_livros_branch_temporaria
        # Faz commit e push dos livros renderizados na branch temporária

      - name: Cria Pull Request para branch book
        id: cria_pull_request_book
        # Cria Pull Request para branch book

