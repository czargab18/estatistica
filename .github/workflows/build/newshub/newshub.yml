name: "Renderizar Notícias - Quarto"

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      [
        "article/**/*.qmd",
        "article/**/*.yml",
        "article/*.html",
        "article/*.bib",
        ".github/workflows/*newshub*.yml",
      ]

permissions:
  contents: write
  pull-requests: read
  pages: write
  id-token: write

jobs:
  detectar:
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    env:
      TOKEN_REPO_SYNC: ${{ secrets.TOKEN_REPO_SYNC }}
      USEREMAIL: ${{ secrets.USEREMAIL }}
      USERNAME: ${{ github.repository_owner }}
    steps:
      - name: Clona o Repositório newshub
        uses: actions/checkout@v4
        with:
          repository: ${{ env.USERNAME }}/newshub
          token: ${{ secrets.GITHUB_TOKEN }}
          path: newshub
          ref: main
          fetch-depth: 30

      - name: Detecta mudanças na pasta article/
        id: detecta_article
        run: |
          cd newshub
          echo "Detectando mudanças na pasta article/"
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^article/' > arquivos.txt || touch arquivos.txt
          echo "Arquivos alterados em article/:"
          cat arquivos.txt || echo "Nenhum arquivo encontrado"

      - name: Salva pasta article/ como artefato
        uses: actions/upload-artifact@v4
        with:
          name: newsroom_detectados
          path: newshub/article

  renderizar:
    needs: [detectar]
    runs-on: ubuntu-latest
    steps:
      - name: Baixa artefato
        uses: actions/download-artifact@v4
        with:
          name: newsroom_detectados
          path: _newsroom

      - name: Configura Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Renderiza notícias Quarto
        working-directory: _newsroom
        id: renderizar
        run: |
          quarto render --no-execute --output-dir ../_docs --to html

      - name: Limpa diretórios 'libs'
        working-directory: _docs
        run: |
          remover="libs _libs _site site_libs delete outra_pasta"
          for nome in $remover; do
            find . -type d -name "$nome" -exec rm -rf {} +
          done

      - name: Clona o Repositório 'newshub'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          path: newshub

      - name: Baixar a Linguagem Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Instalar dependencias do Python
        working-directory: newshub
        run: |
          python -m pip install --upgrade pip
          pip install -r run/requirements.txt

      - name: Criar pasta temporaria 'artefatos'
        run: |
          mkdir -p newshub/artefatos

      - name: Syncronizar pastas
        run: |
          rsync -av --update _docs/ newshub/artefatos 

      - name: Corrigir links para GitHub Pages - newshub
        working-directory: newshub
        run: |
          python run/article.py --basedir artefatos/artigo.html --outputdir newsroom/archive

      - name: Exporta artefatos de renderizadas
        uses: actions/upload-artifact@v4
        with:
          name: newsroom_renderizados
          path: "newshub/newsroom"

  newshub:
    needs: [renderizar]
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      - name: Clona o Repositório 'BOOKS'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          path: newshub

      - name: Configurar credencias Git
        working-directory: newshub
        run: |
          git config --global user.name "${{ github.repository_owner }}"
          git config --global user.email "${{ secrets.USEREMAIL }}"

      - name: Verificar branch 'news'
        working-directory: newshub
        run: |
          if git show-ref --verify --quiet refs/heads/news; then
            echo "Branch local 'news' já existe."
            git checkout news
          elif git ls-remote --exit-code --heads origin news; then
            echo "Branch remota 'news' existe. Fazendo fetch e checkout."
            git fetch origin news:news
            git checkout news
          else
            echo "Branch 'news' não existe. Criando nova branch."
            git checkout -b news
          fi

      - name: Baixa Artefato para 'GitHub Pages'
        uses: actions/download-artifact@v4
        with:
          name: newsroom_renderizados
          path: "newshub/newsroom/"

      - name: Commit as mudanças
        working-directory: newshub
        run: |
          git add newsroom
          git commit -m "news: atualiza notícias renderizadas" || echo "Nenhuma mudança para commitar"

      - name: Push das mudanças
        working-directory: newshub
        run: |
          git push origin news:news --force

      - name: Configurar Artefato para GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          name: newshub_pages
          path: "./newshub/newsroom/archive"

      - name: Faz deploy para GitHub Pages - newshub
        uses: actions/deploy-pages@v4
        with:
          artifact_name: newshub_pages

  estatistica:
    needs: [renderizar, newshub]
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    env:
      USERNAME: ${{ github.repository_owner }}
      USEREMAIL: ${{ secrets.USEREMAIL }}
      TOKEN_REPO_SYNC: ${{ secrets.TOKEN_REPO_SYNC }}
    steps:
      - name: Clona o Repositório ESTATISTICA
        uses: actions/checkout@v4
        with:
          ref: news
          path: estatistica
          fetch-depth: 1
          repository: ${{ env.USERNAME }}/estatistica
          token: ${{ env.TOKEN_REPO_SYNC }}

      - name: Configurar credenciais Git
        working-directory: estatistica
        run: |
          git config user.name "${{ env.USERNAME }}"
          git config user.email "${{ env.USEREMAIL }}"
          git remote set-url origin https://x-access-token:${{ env.TOKEN_REPO_SYNC }}@github.com/${{ env.USERNAME }}/estatistica.git

      - name: Verificar se a pasta 'estatistica/newsroom/archive' existe
        working-directory: estatistica
        id: check_archive
        run: |
          if [ ! -d "newsroom/archive" ]; then
            echo "Criando pasta newsroom/archive"
            mkdir -p newsroom/archive
          else
            echo "Pasta newsroom/archive já existe"
          fi

      - name: Baixar Artefato de notícias renderizadas
        uses: actions/download-artifact@v4
        with:
          name: newsroom_renderizados
          path: estatistica/newsroom/temp_puta

      - name: Mover notícias renderizadas para 'estatistica/newsroom/archive'
        working-directory: estatistica
        id: move_news
        run: |
          rsync -av --update newsroom/temp_puta/. newsroom/

      - name: Garante que a branch 'news' existe e faz checkout
        working-directory: estatistica
        run: |
          if git show-ref --verify --quiet refs/heads/news; then
            echo "Branch local 'news' já existe."
            git checkout news
          elif git ls-remote --exit-code --heads origin news; then
            echo "Branch remota 'news' existe. Fazendo fetch e checkout."
            git fetch origin news:news
            git checkout news
          else
            echo "Branch 'news' não existe. Criando nova branch."
            git checkout -b news
          fi

      - name: Commit das mudanças na branch 'news'
        working-directory: estatistica
        run: |
          git checkout news
          git add newsroom/archive
          git commit -m "news: atualiza notícias renderizadas" || echo "Nenhuma mudança para commitar"

      - name: Push das mudanças para a branch 'news'
        working-directory: estatistica
        run: |
          git push origin news --force || echo "Nenhuma mudança para enviar"

  cleanup:
    needs: [newshub,estatistica]
    runs-on: ubuntu-latest
    steps:
      - name: Deleta artefatos
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            newsroom_detectados
            newsroom_renderizados
            github-pages
