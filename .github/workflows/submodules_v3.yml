# C√≥digo gerado/assistido por IA
name: submodules_v3
# description: Workflow para atualizar arquivos dos subm√≥dulos com o reposit√≥rio Estat√≠stica.

on:
  workflow_dispatch:
    inputs:
      livros:
        description: 'Lista de livros para renderizar (JSON array, ex: ["EST1234", "EST5678"])'
        required: false
        default: '[]'
        type: string
  repository_dispatch:
    types: [atualizar-books, atualizar-newshub, atualizar-backend, atualizar-wss]

env:
  url: ${{ vars.URL }}
  TOKEN: ${{ secrets.TOKEN_REPO_SYNC }}
  USERNAME: ${{ github.repository_owner }}
  USEREMAIL: ${{ secrets.USEREMAIL }}

permissions:
  pages: write
  id-token: write
  contents: write
  actions: write
  pull-requests: write


jobs:
  books:
    permissions:
      contents: write
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.action == 'atualizar-books' }}
    runs-on: ubuntu-latest
    environment:
      name: ENVIRONMENT
    steps:
      
      - name: Configura credenciais do Git para subm√≥dulos privados
        run: |
          git config --global url."https://${{ env.TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ env.USERNAME }}/estatistica
          token: ${{ env.TOKEN }}
          ref: "stag"
          fetch-tags: true

      - name: Atualizar submodule 'books'
        run: |
          git submodule update --init --remote --merge books

      - name: Determinar livros a renderizar
        id: books-list
        run: |
          # Obt√©m a lista de livros do client_payload (repository_dispatch) ou workflow_dispatch
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            LIVROS='${{ toJson(github.event.client_payload.livros) }}'
          else
            LIVROS='${{ inputs.livros }}'
          fi
          
          # Se a lista estiver vazia ou for null, renderiza todos os livros
          if [ -z "$LIVROS" ] || [ "$LIVROS" == "null" ] || [ "$LIVROS" == "[]" ]; then
            echo "Renderizando TODOS os livros"
            LIVROS_ARRAY=$(cd books/build && ls -d */ 2>/dev/null | sed 's#/##' | jq -R -s -c 'split("\n")[:-1]')
            echo "render_all=true" >> $GITHUB_OUTPUT
          else
            echo "Renderizando livros espec√≠ficos: $LIVROS"
            LIVROS_ARRAY="$LIVROS"
            echo "render_all=false" >> $GITHUB_OUTPUT
          fi
          
          echo "livros=$LIVROS_ARRAY" >> $GITHUB_OUTPUT
          echo "Livros a renderizar: $LIVROS_ARRAY"

      - name: Instalar Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Renderiza livros Quarto
        run: |
          LIVROS='${{ steps.books-list.outputs.livros }}'
          
          # Converte o JSON array para bash array
          LIVROS_ARRAY=($(echo "$LIVROS" | jq -r '.[]'))
          
          if [ ${#LIVROS_ARRAY[@]} -eq 0 ]; then
            echo "‚ö†Ô∏è Nenhum livro para renderizar"
            exit 0
          fi
          
          echo "üìö Renderizando ${#LIVROS_ARRAY[@]} livro(s)..."
          
          for livro in "${LIVROS_ARRAY[@]}"; do
            if [ -d "books/build/$livro" ]; then
              echo "‚úÖ Renderizando livro: $livro"
              quarto render "books/build/$livro" --to html --execute --output-dir "./../../../book/$livro"
            else
              echo "‚ö†Ô∏è Livro n√£o encontrado: $livro"
            fi
          done
          
          echo "‚ú® Renderiza√ß√£o conclu√≠da!"

      - name: Atualizar submodule 'backend'
        run: |
          git submodule update --init --remote --merge backend
      
      - name: Instalar o python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.*'

      - name: Instalar depend√™ncias do backend
        run: |
          pip install -r backend/actions/run/requirements.txt

      - name: Automa√ß√£o com 'backend/action/run/'
        run: |
          python ./backend/actions/run/site_html_manager.py --only-head --dynamic-head --path ./book/
          python ./backend/actions/run/site_html_manager.py --only-header --path ./book/
          python ./backend/actions/run/site_html_manager.py --only-footer --path ./book/

      - name: Commit e criar Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ env.TOKEN }}
          base: main
          branch: book
          delete-branch: true
          title: "book: atualiza novos livros Quarto renderizados"
          labels: |
            books
            quarto
            action
            needs-review
            automated-pr
          assignees: ${{ github.repository_owner }}
          reviewers: ${{ github.repository_owner  }}
          draft: false
          commit-message: |
            books: atualiza e padroniza livros renderizados

            Commit fonte: ${{ github.sha }}
            Data: $(date +'%Y-%m-%d %H:%M:%S UTC')
            Livros renderizados: ${{ steps.books-list.outputs.livros }}

          body: |
            ## üìñ atualiza e padroniza livros renderizados pelo GitHub Actions

            Esta 'pull_request' cont√©m a atualiza√ß√£o dos livros renderizados, via GitHub Actions, a partir dos arquivos fonte em Quarto (.qmd) presentes na pasta `build/`.

            ### üìã Detalhes da Renderiza√ß√£o
            - **Commit fonte**: `${{ github.sha }}`
            - **Workflow**: `${{ github.run_id }}`
            - **Data**: $(date +'%Y-%m-%d %H:%M:%S UTC')
            - **Triggering commit**: `${{ github.event.head_commit.message }}`
            - **Modo**: ${{ steps.books-list.outputs.render_all == 'true' && 'üîÑ Todos os livros' || 'üéØ Livros espec√≠ficos' }}

            ### üìö Livros Renderizados
            $(echo '${{ steps.books-list.outputs.livros }}' | jq -r '.[]' | sed 's/^/- üìñ /' || echo "- Nenhum livro renderizado")

            ## üëÄ Review Checklist
            Por favor, verifique se todos os livros foram renderizados corretamente e est√£o prontos para publica√ß√£o.:
            - [ ] üìñ Livros foram renderizados corretamente
            - [ ] üé® Formata√ß√£o e estilos est√£o adequados
            - [ ] üîó Links internos funcionam
            - [ ] üì± Layout √© responsivo
            - [ ] üìÅ Estrutura de pastas est√° organizada

            ---
            **‚ö†Ô∏è Esta PR requer aprova√ß√£o manual do propriet√°rio antes do merge.**